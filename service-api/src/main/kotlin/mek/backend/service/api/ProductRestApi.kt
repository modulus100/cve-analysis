package mek.backend.service.api

import io.swagger.v3.oas.annotations.Operation
import io.swagger.v3.oas.annotations.media.Content
import io.swagger.v3.oas.annotations.media.Schema
import io.swagger.v3.oas.annotations.responses.ApiResponse
import io.swagger.v3.oas.annotations.responses.ApiResponses
import io.swagger.v3.oas.annotations.tags.Tag
import mek.backend.analytics.api.ProductSearchRequest
import mek.backend.analytics.api.ProductSearchResponse
import mek.backend.analytics.service.AnalyticsService
import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RequestParam
import org.springframework.web.bind.annotation.RestController


@Tag(name = "Product", description = "Product related endpoints")
@RequestMapping("/product")
@RestController
class ProductRestApi(
    val analyticsService: AnalyticsService
) {

    @Operation(summary = "Search by product and vendor names")
    @GetMapping("search")
    @ApiResponses(
        value = [
            ApiResponse(
                responseCode = "200",
                description = "Successful processed search",
                content = [
                    Content(schema = Schema(implementation = ProductSearchResponse::class))
                ]
            )
        ]
    )
    fun searchProduct(
        @Schema(
            description = "The name of the product. This field contains a short, " +
                    "descriptive title identifying the product, typically including " +
                    "relevant attributes such as series, model, " +
                    "version, or specific application",
            type = "string",
            example = "windows_server_2016",
            required = false
        )
        @RequestParam productName: String?,

        @Schema(
            description = "The name of the vendor or organization responsible for the product. This field contains the official name of the company, project, or individual that developed or distributes the product. Example: 'Google', 'Cisco', 'Intel', 'Python Software Foundation'",
            type = "string",
            example = "microsoft",
            required = false
        )
        @RequestParam vendorName: String?,
    ): ProductSearchResponse {
        return analyticsService.searchProducts(ProductSearchRequest(productName, vendorName))
    }
}