package mek.backend.analytics.api

import io.swagger.v3.oas.annotations.media.Schema
import java.util.UUID

// database
data class ProductEntity(
    val id: UUID,
    val productName: String,
    val vendorName: String
)

// openapi
data class Product(
    @field:Schema(required = true)
    val id: UUID,

    @field:Schema(required = true)
    val productName: String,

    @field:Schema(required = true)
    val vendorName: String
)

data class ProductSearchRequest(
    @field:Schema(
        description = "The name of the product. This field contains a short, " +
                "descriptive title identifying the product, typically including " +
                "relevant attributes such as series, model, " +
                "version, or specific application",
        type = "string",
        example = "windows_server_2016"
    )
    val productName: String?,

    @field:Schema(
        description = "The name of the vendor or organization responsible for the product. This field contains the official name of the company, project, or individual that developed or distributes the product. Example: 'Google', 'Cisco', 'Intel', 'Python Software Foundation'",
        type = "string",
        example = "microsoft"
    )
    val vendorName: String?
)

data class ProductSearchResponse(

    @field:Schema(
        description = "List of found products",
    )
    val products: List<Product>,
)