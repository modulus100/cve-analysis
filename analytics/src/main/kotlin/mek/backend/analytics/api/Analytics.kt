package mek.backend.analytics.api

data class SeverityDistributionResponse(
    val severityDistribution: List<SeverityDistribution>,
)

data class SeverityDistribution(
    val severity: Severity,
    val count: Long
)

data class WorstProductsResponse(
    val worstProducts: List<WorstProduct>,
)

data class WorstProduct(
    val productName: String,
    val vendorName: String,
    val vulnerabilityCount: Long
)

data class WorstPlatformsResponse(
    val platforms: List<WorstPlatform>,
)

data class WorstPlatform(
    val vendorName: String,
    val vulnerabilityCount: Long
)


data class HighestImpactVulnerabilitiesResponse(
    val vulnerabilities: List<Vulnerability>
) {
    data class Vulnerability(val cveId: String, val impactScore: Long)
}

data class ExploitabilityScore(
    val cveId: String,
    val exploitabilityScore: Long
)

data class HighestExplotobilityScoresResponse(
    val exploitabilityScores: List<ExploitabilityScore>
)

data class VectorAttackCount(
    val name: AttackVector,
    val count: Long
)

data class TopVectorAttacksResponse(
    val vectorAttacks: List<VectorAttackCount>
)

data class VectorStringCount(
    val vectorString: String,
    val count: Long
)

data class TopVectorStringsResponse(
    val vectorStrings: List<VectorStringCount>
)