CREATE TABLE products
(
    id           UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    product_name VARCHAR(255) NOT NULL,
    vendor_name  VARCHAR(255) NOT NULL,
    UNIQUE (product_name, vendor_name)
);

CREATE TABLE product_versions
(
    id         UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    product_id UUID NOT NULL,
    version    VARCHAR(255),
    FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
);

CREATE TABLE vulnerabilities
(
    id                 UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    cve_id             VARCHAR(255) UNIQUE NOT NULL,
    description        TEXT                NOT NULL,
    published_date     DATE                NOT NULL,
    last_modified_date DATE                NOT NULL
);

CREATE TABLE vulnerability_metrics
(
    id                     UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    vulnerability_id       UUID,
    metric_name            VARCHAR(255) NOT NULL,
    metric_type            VARCHAR(255) NOT NULL,
    version                VARCHAR(50),
    vector_string          VARCHAR(255),
    attack_vector          VARCHAR(255),
    attack_complexity      VARCHAR(255),
    privileges_required    VARCHAR(255),
    user_interaction       VARCHAR(255),
    confidentiality_impact VARCHAR(255),
    integrity_impact       VARCHAR(255),
    availability_impact    VARCHAR(255),
    base_score             FLOAT,
    base_severity          VARCHAR(50),
    exploitability_score   FLOAT,
    impact_score           FLOAT,
    FOREIGN KEY (vulnerability_id) REFERENCES vulnerabilities (id) ON DELETE CASCADE
);

CREATE TABLE product_vulnerabilities
(
    id                 UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    product_version_id UUID,
    vulnerability_id   UUID,
    FOREIGN KEY (product_version_id) REFERENCES product_versions (id) ON DELETE CASCADE,
    FOREIGN KEY (vulnerability_id) REFERENCES vulnerabilities (id) ON DELETE CASCADE
);
